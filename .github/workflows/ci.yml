name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run tests
      run: npm test
    
    - name: Check for security vulnerabilities
      run: npm audit --audit-level moderate

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: docker build -t web3-discord-bot .
    
    # - name: Test Docker image with Compose
    #   run: |
    #     docker compose up -d
    #     sleep 10
    #     docker compose logs web3-discord-bot
    #     docker compose down
    
    - name: Push Docker image to GHCR
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker tag web3-discord-bot ghcr.io/${{ github.repository_owner }}/web3-discord-bot:latest
        docker tag web3-discord-bot ghcr.io/${{ github.repository_owner }}/web3-discord-bot:${{ github.sha }}
        docker push ghcr.io/${{ github.repository_owner }}/web3-discord-bot:latest
        docker push ghcr.io/${{ github.repository_owner }}/web3-discord-bot:${{ github.sha }}

  security:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Pull Docker image from build job
      run: |
        # The image is already built in the build job
        # This step ensures we have the image for scanning
        echo "Using image built in previous job"
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'web3-discord-bot:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Alternative: Grype scanner (even simpler)
  # grype-security:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   
  #   steps:
  #   - uses: actions/checkout@v4
  #   
  #   - name: Build Docker image
  #     run: docker build -t web3-discord-bot .
  #   
  #   - name: Run Grype vulnerability scanner
  #     run: |
  #       docker run --rm -v /var/run/docker.sock:/var/run/docker.sock anchore/grype:latest web3-discord-bot:latest 